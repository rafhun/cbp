<?php

namespace Cx\Model\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CxCoreContentManagerModelEntityPageProxy extends \Cx\Core\ContentManager\Model\Entity\Page implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setNodeIdShadowed($nodeIdShadowed)
    {
        $this->_load();
        return parent::setNodeIdShadowed($nodeIdShadowed);
    }

    public function getNodeIdShadowed()
    {
        $this->_load();
        return parent::getNodeIdShadowed();
    }

    public function setLang($lang)
    {
        $this->_load();
        return parent::setLang($lang);
    }

    public function getLang()
    {
        $this->_load();
        return parent::getLang();
    }

    public function setTitle($title)
    {
        $this->_load();
        return parent::setTitle($title);
    }

    public function nextSlug()
    {
        $this->_load();
        return parent::nextSlug();
    }

    public function getTitle()
    {
        $this->_load();
        return parent::getTitle();
    }

    public function setContent($content)
    {
        $this->_load();
        return parent::setContent($content);
    }

    public function setSourceMode($sourceMode)
    {
        $this->_load();
        return parent::setSourceMode($sourceMode);
    }

    public function getContent()
    {
        $this->_load();
        return parent::getContent();
    }

    public function getSourceMode()
    {
        $this->_load();
        return parent::getSourceMode();
    }

    public function setCustomContent($customContent)
    {
        $this->_load();
        return parent::setCustomContent($customContent);
    }

    public function getCustomContent()
    {
        $this->_load();
        return parent::getCustomContent();
    }

    public function setCssName($cssName)
    {
        $this->_load();
        return parent::setCssName($cssName);
    }

    public function getCssName()
    {
        $this->_load();
        return parent::getCssName();
    }

    public function setMetatitle($metatitle)
    {
        $this->_load();
        return parent::setMetatitle($metatitle);
    }

    public function getMetatitle()
    {
        $this->_load();
        return parent::getMetatitle();
    }

    public function setMetadesc($metadesc)
    {
        $this->_load();
        return parent::setMetadesc($metadesc);
    }

    public function getMetadesc()
    {
        $this->_load();
        return parent::getMetadesc();
    }

    public function setMetakeys($metakeys)
    {
        $this->_load();
        return parent::setMetakeys($metakeys);
    }

    public function getMetakeys()
    {
        $this->_load();
        return parent::getMetakeys();
    }

    public function setMetarobots($metarobots)
    {
        $this->_load();
        return parent::setMetarobots($metarobots);
    }

    public function getMetarobots()
    {
        $this->_load();
        return parent::getMetarobots();
    }

    public function setStart($start)
    {
        $this->_load();
        return parent::setStart($start);
    }

    public function getStart()
    {
        $this->_load();
        return parent::getStart();
    }

    public function setEnd($end)
    {
        $this->_load();
        return parent::setEnd($end);
    }

    public function getEnd()
    {
        $this->_load();
        return parent::getEnd();
    }

    public function setEditingStatus($editingStatus)
    {
        $this->_load();
        return parent::setEditingStatus($editingStatus);
    }

    public function getEditingStatus()
    {
        $this->_load();
        return parent::getEditingStatus();
    }

    public function setDisplay($display)
    {
        $this->_load();
        return parent::setDisplay($display);
    }

    public function getDisplay()
    {
        $this->_load();
        return parent::getDisplay();
    }

    public function setActive($active)
    {
        $this->_load();
        return parent::setActive($active);
    }

    public function getStatus()
    {
        $this->_load();
        return parent::getStatus();
    }

    public function setStatus($status)
    {
        $this->_load();
        return parent::setStatus($status);
    }

    public function getActive($disregardScheduledPublishing = false)
    {
        $this->_load();
        return parent::getActive($disregardScheduledPublishing);
    }

    public function setTarget($target)
    {
        $this->_load();
        return parent::setTarget($target);
    }

    public function getTarget()
    {
        $this->_load();
        return parent::getTarget();
    }

    public function isTargetInternal()
    {
        $this->_load();
        return parent::isTargetInternal();
    }

    public function getTargetNodeId()
    {
        $this->_load();
        return parent::getTargetNodeId();
    }

    public function getTargetLangId()
    {
        $this->_load();
        return parent::getTargetLangId();
    }

    public function getTargetModule()
    {
        $this->_load();
        return parent::getTargetModule();
    }

    public function getTargetCmd()
    {
        $this->_load();
        return parent::getTargetCmd();
    }

    public function getTargetQueryString()
    {
        $this->_load();
        return parent::getTargetQueryString();
    }

    public function setModule($module)
    {
        $this->_load();
        return parent::setModule($module);
    }

    public function getModule()
    {
        $this->_load();
        return parent::getModule();
    }

    public function setCmd($cmd)
    {
        $this->_load();
        return parent::setCmd($cmd);
    }

    public function getCmd()
    {
        $this->_load();
        return parent::getCmd();
    }

    public function setNode(\Cx\Core\ContentManager\Model\Entity\Node $node)
    {
        $this->_load();
        return parent::setNode($node);
    }

    public function getNode()
    {
        $this->_load();
        return parent::getNode();
    }

    public function setSkin($skin)
    {
        $this->_load();
        return parent::setSkin($skin);
    }

    public function getSkin()
    {
        $this->_load();
        return parent::getSkin();
    }

    public function setCaching($caching)
    {
        $this->_load();
        return parent::setCaching($caching);
    }

    public function getCaching()
    {
        $this->_load();
        return parent::getCaching();
    }

    public function setType($type)
    {
        $this->_load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->_load();
        return parent::getType();
    }

    public function validate()
    {
        $this->_load();
        return parent::validate();
    }

    public function setUpdatedAtToNow()
    {
        $this->_load();
        return parent::setUpdatedAtToNow();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->_load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->_load();
        return parent::getUpdatedAt();
    }

    public function setUpdatedBy($updatedBy)
    {
        $this->_load();
        return parent::setUpdatedBy($updatedBy);
    }

    public function getUpdatedBy()
    {
        $this->_load();
        return parent::getUpdatedBy();
    }

    public function isFrontendProtected()
    {
        $this->_load();
        return parent::isFrontendProtected();
    }

    public function isBackendProtected()
    {
        $this->_load();
        return parent::isBackendProtected();
    }

    public function setFrontendProtection($enabled)
    {
        $this->_load();
        return parent::setFrontendProtection($enabled);
    }

    public function setBackendProtection($enabled)
    {
        $this->_load();
        return parent::setBackendProtection($enabled);
    }

    public function isVisible()
    {
        $this->_load();
        return parent::isVisible();
    }

    public function isActive($disregardScheduledPublishing = false)
    {
        $this->_load();
        return parent::isActive($disregardScheduledPublishing);
    }

    public function setSlug($slug, $nextSlugCall = false)
    {
        $this->_load();
        return parent::setSlug($slug, $nextSlugCall);
    }

    public function getSlug()
    {
        $this->_load();
        return parent::getSlug();
    }

    public function copy($includeContent = true, $includeModuleAndCmd = true, $includeName = true, $includeMetaData = true, $includeProtection = true, $followRedirects = false, $followFallbacks = false, $page = NULL)
    {
        $this->_load();
        return parent::copy($includeContent, $includeModuleAndCmd, $includeName, $includeMetaData, $includeProtection, $followRedirects, $followFallbacks, $page);
    }

    public function copyProtection($page, $frontend)
    {
        $this->_load();
        return parent::copyProtection($page, $frontend);
    }

    public function copyToNode($destinationNode, $includeContent = true, $includeModuleAndCmd = true, $includeName = true, $includeMetaData = true, $includeProtection = true, $followRedirects = false, $followFallbacks = false, $page = NULL)
    {
        $this->_load();
        return parent::copyToNode($destinationNode, $includeContent, $includeModuleAndCmd, $includeName, $includeMetaData, $includeProtection, $followRedirects, $followFallbacks, $page);
    }

    public function copyToLang($destinationLang, $includeContent = true, $includeModuleAndCmd = true, $includeName = true, $includeMetaData = true, $includeProtection = true, $followRedirects = false, $followFallbacks = false, $page = NULL)
    {
        $this->_load();
        return parent::copyToLang($destinationLang, $includeContent, $includeModuleAndCmd, $includeName, $includeMetaData, $includeProtection, $followRedirects, $followFallbacks, $page);
    }

    public function setContentTitle($contentTitle)
    {
        $this->_load();
        return parent::setContentTitle($contentTitle);
    }

    public function getContentTitle()
    {
        $this->_load();
        return parent::getContentTitle();
    }

    public function setLinkTarget($linkTarget)
    {
        $this->_load();
        return parent::setLinkTarget($linkTarget);
    }

    public function getLinkTarget()
    {
        $this->_load();
        return parent::getLinkTarget();
    }

    public function setFrontendAccessId($frontendAccessId)
    {
        $this->_load();
        return parent::setFrontendAccessId($frontendAccessId);
    }

    public function getFrontendAccessId()
    {
        $this->_load();
        return parent::getFrontendAccessId();
    }

    public function setBackendAccessId($backendAccessId)
    {
        $this->_load();
        return parent::setBackendAccessId($backendAccessId);
    }

    public function getBackendAccessId()
    {
        $this->_load();
        return parent::getBackendAccessId();
    }

    public function getProtection()
    {
        $this->_load();
        return parent::getProtection();
    }

    public function isVirtual()
    {
        $this->_load();
        return parent::isVirtual();
    }

    public function setVirtual($virtual = true)
    {
        $this->_load();
        return parent::setVirtual($virtual);
    }

    public function getFallbackContentFrom($page)
    {
        $this->_load();
        return parent::getFallbackContentFrom($page);
    }

    public function setCssNavName($cssNavName)
    {
        $this->_load();
        return parent::setCssNavName($cssNavName);
    }

    public function getCssNavName()
    {
        $this->_load();
        return parent::getCssNavName();
    }

    public function setAlias($data)
    {
        $this->_load();
        return parent::setAlias($data);
    }

    public function getAliases()
    {
        $this->_load();
        return parent::getAliases();
    }

    public function updateFromArray($newData)
    {
        $this->_load();
        return parent::updateFromArray($newData);
    }

    public function setProtection($protection)
    {
        $this->_load();
        return parent::setProtection($protection);
    }

    public function setupPath($targetLang)
    {
        $this->_load();
        return parent::setupPath($targetLang);
    }

    public function getPath()
    {
        $this->_load();
        return parent::getPath();
    }

    public function getURL($protocolAndDomainWithPathOffset, $params)
    {
        $this->_load();
        return parent::getURL($protocolAndDomainWithPathOffset, $params);
    }

    public function getParent()
    {
        $this->_load();
        return parent::getParent();
    }

    public function getChildren()
    {
        $this->_load();
        return parent::getChildren();
    }

    public function getFallback()
    {
        $this->_load();
        return parent::getFallback();
    }

    public function getLastModificationDateTime()
    {
        $this->_load();
        return parent::getLastModificationDateTime();
    }

    public function getChangeFrequency()
    {
        $this->_load();
        return parent::getChangeFrequency();
    }

    public function getRelatedBlocks()
    {
        $this->_load();
        return parent::getRelatedBlocks();
    }

    public function setRelatedBlocks($relatedBlocks)
    {
        $this->_load();
        return parent::setRelatedBlocks($relatedBlocks);
    }

    public function getVersion()
    {
        $this->_load();
        return parent::getVersion();
    }

    public function isDraft()
    {
        $this->_load();
        return parent::isDraft();
    }

    public function serialize()
    {
        $this->_load();
        return parent::serialize();
    }

    public function unserialize($data)
    {
        $this->_load();
        return parent::unserialize($data);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nodeIdShadowed', 'lang', 'type', 'caching', 'updatedAt', 'updatedBy', 'title', 'linkTarget', 'contentTitle', 'slug', 'content', 'sourceMode', 'customContent', 'cssName', 'cssNavName', 'skin', 'metatitle', 'metadesc', 'metakeys', 'metarobots', 'start', 'end', 'editingStatus', 'protection', 'frontendAccessId', 'backendAccessId', 'display', 'active', 'target', 'module', 'cmd', 'node');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
    
    public function __toString() {
        return strval($this->getId());
    }
}